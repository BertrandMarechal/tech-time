services:
  proxy:
    image: "haproxy:1.8-alpine"
    ports:
      - "20700:80"
    volumes:
      - "./haproxy:/usr/local/etc/haproxy:ro"
    depends_on:
      - python-backend
      - react-frontend
  postgres:
    image: "postgres:17.5-alpine"
    ports:
      - "5439:5432"
    environment:
      POSTGRES_USER: "${PG_USER}"
      POSTGRES_PASSWORD: "${PG_PASSWORD}"
      POSTGRES_DB: "${PG_DB}"
    volumes:
      - "./temp/postgresdata:/var/lib/postgresql/data"

  python-backend:
    build:
      context: ./backend/python
      dockerfile: ./Dockerfile
    depends_on:
      - postgres
    ports:
      - "20701:20701"
    environment:
      - FLASK_PORT=20701
      - DB_USER=${PG_USER}
      - DB_PASSWORD=${PG_PASSWORD}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${PG_DB}
    volumes:
      - ./backend/python/src:/usr/src

  go-backend:
    build:
      context: ./backend/go
      dockerfile: ./Dockerfile
    depends_on:
      - postgres
    ports:
      - "20702:20702"
    environment:
      - PORT=20702
      - DB_USER=${PG_USER}
      - DB_PASSWORD=${PG_PASSWORD}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${PG_DB}
    volumes:
      - ./backend/go:/app

  react-frontend:
    build:
      context: ./frontend/react
      dockerfile: ./Dockerfile
    ports:
      - "20710:20710"
    environment:
      - PORT=20710
    volumes:
      - /app/node_modules
      - ./frontend/react:/opt/app